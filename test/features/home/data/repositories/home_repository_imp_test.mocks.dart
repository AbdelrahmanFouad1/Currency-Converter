// Mocks generated by Mockito 5.3.2 from annotations
// in currency/test/features/home/data/repositories/home_repository_imp_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:currency/features/home/data/datasources/home_remote_data_source.dart'
    as _i3;
import 'package:currency/features/home/data/models/countries_model.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCountriesModel_0 extends _i1.SmartFake
    implements _i2.CountriesModel {
  _FakeCountriesModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSource extends _i1.Mock
    implements _i3.HomeRemoteDataSource {
  MockHomeRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.CountriesModel> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue: _i4.Future<_i2.CountriesModel>.value(_FakeCountriesModel_0(
          this,
          Invocation.method(
            #getCountries,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CountriesModel>);
  @override
  _i4.Future<Map<String, num>> convert({
    required String? from,
    required String? to,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #convert,
          [],
          {
            #from: from,
            #to: to,
          },
        ),
        returnValue: _i4.Future<Map<String, num>>.value(<String, num>{}),
      ) as _i4.Future<Map<String, num>>);
}

/// A class which mocks [HomeRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomeRemoteDataSourceForTest extends _i1.Mock
    implements _i3.HomeRemoteDataSource {
  @override
  _i4.Future<_i2.CountriesModel> getCountries() => (super.noSuchMethod(
        Invocation.method(
          #getCountries,
          [],
        ),
        returnValue: _i4.Future<_i2.CountriesModel>.value(_FakeCountriesModel_0(
          this,
          Invocation.method(
            #getCountries,
            [],
          ),
        )),
      ) as _i4.Future<_i2.CountriesModel>);
  @override
  _i4.Future<Map<String, num>> convert({
    required String? from,
    required String? to,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #convert,
          [],
          {
            #from: from,
            #to: to,
          },
        ),
        returnValue: _i4.Future<Map<String, num>>.value(<String, num>{}),
      ) as _i4.Future<Map<String, num>>);
}
